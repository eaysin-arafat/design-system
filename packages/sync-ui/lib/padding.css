/*=============================================
=            #Variables                      =
=============================================*/
/**
* TABLE OF CONTENTS
*
* COLORS
* Brand colors........These are the main brand colors. They will be used the most
* Neutral colors......White and black, gray scale, secondary colors.
* Utility colors......Other colors to represent states: info, warning, success, etc.
*
* TYPOGRAPHY
* Font families.......The fonts used in the design system.
* Font weights........Font weights
* Sizes...............Font sizing for body text, paragraphs, inputs
* Heading sizes.......Font sizing for page headings
*
* BREAKPOINTS
* Breakpoints.........Global responsive breakpoints definitions.
*
* MARGIN
* Margin..............Global fixed set of margin variables
*
* PADDING
* Padding..............Global fixed set of padding variables
*
* SPACING
* Spacing..............Global fixed set of spacing variables
*
* SHADOW
* Shadow...............Global fixed set of shadow variables
*
* BORDER
* Border...............Global fixed set of border variables
*/
/*----------  COLORS  ----------*/
/* Brand colors */
/* Neutral colors */
/* Utility colors */
/*----------  TYPOGRAPHY  ----------*/
/**
 *
 * 1) The playfair font. We'll use this for headings mostly.
 *    https://fonts.google.com/specimen/Playfair+Display
 *
 * 2) The raleway font. We'll use this for the body text.
 *    https://fonts.google.com/specimen/Raleway
 *
 */
/* Font families */
/* Font weights */
/* Font Sizes */
/* Heading sizes */
/*----------  BREAKPOINTS  ----------*/
/* Breakpoints */
/*----------  MARGIN  ----------*/
/*----------  PADDING  ----------*/
/*----------  SPACING  ----------*/
/* Spacing */
/*----------  SHADOW  ----------*/
/* Shadow */
/*=============================================
=            Foundation Colors               =
=============================================*/
/**
 * This file defines the foundational color variables used throughout the design system.
 * These colors default to the palette defined in `variables.scss`. Developers can
 * override these defaults with their own variables.
 */
/*----------  Global Text Colors  ----------*/
/**
 * Text color for body content and background color.
 * These variables can be overridden by defining custom CSS variables.
 */
/*----------  Link Colors  ----------*/
/**
 * Link color settings, including hover and visited states.
 */
/*----------  Border Colors  ----------*/
/**
 * Border colors for various UI elements.
 */
/*----------  Button Colors  ----------*/
/**
 * Primary button colors including text color, background color, and hover background color.
 */
/*----------  Form Elements  ----------*/
/**
 * Form element colors including borders, backgrounds, and state colors.
 */
/*----------  Shadows  ----------*/
/**
 * Shadow styles for elements such as cards, modals, and buttons.
 */
/*----------  State Colors  ----------*/
/**
 * Colors for UI states such as hover, active, and disabled.
 */
/*----------  Background Colors  ----------*/
/**
 * General background colors for various components.
 */
/*----------  Text Color States  ----------*/
/**
 * Text colors for different states like success, error, and info.
 */
/*----------  End of Foundation Colors  ----------*/
/*=============================================
=            Foundation Typography           =
=============================================*/
/**
 * This file defines the typography settings for the design system,
 * including font families, font sizes, font weights, and line heights.
 */
/*----------  Font Families  ----------*/
/*----------  Text Color  ----------*/
/*----------  Font Sizes  ----------*/
/*----------  Font Weights  ----------*/
/*----------  Line Heights  ----------*/
/*----------  Letter Spacing  ----------*/
/*----------  Text Transformations  ----------*/
/*=====  End of Section comment block  ======*/
/*=============================================
=            Essential SCSS Mixins            =
=============================================*/
/*----------  Responsive Typography  ----------*/
/**
 * Mixin for responsive font sizes that scale between two breakpoints.
 * @param {number} $min-size - Font size at the smallest breakpoint.
 * @param {number} $max-size - Font size at the largest breakpoint.
 * @param {number} $min-width - Smallest viewport width.
 * @param {number} $max-width - Largest viewport width.
 */
/*----------  Media Queries  ----------*/
/**
 * Mixin for media queries.
 * Allows for easier and more readable media queries.
 * @param {string} $breakpoint - The breakpoint for the media query.
 */
/*----------  Padding  ----------*/
/*----------  Margin  ----------*/
/*----------  Flexbox Layouts  ----------*/
/**
 * Mixin for flexbox container.
 * Provides shorthand for common flexbox properties.
 * @param {string} $direction - Flex direction (row, column, etc.).
 * @param {string} $justify - Justify content (flex-start, center, etc.).
 * @param {string} $align - Align items (stretch, center, etc.).
 * @param {string} $wrap - Flex wrap (nowrap, wrap, etc.).
 */
/**
 * Mixin for flexbox item.
 * Provides shorthand for common flexbox item properties.
 * @param {number|string} $grow - Flex grow (0, 1, etc.).
 * @param {number|string} $shrink - Flex shrink (0, 1, etc.).
 * @param {string} $basis - Flex basis (auto, 100px, etc.).
 */
/*----------  Centering Elements  ----------*/
/**
 * Mixin for centering elements horizontally and vertically using flexbox.
 * Can be applied to a flex container.
 */
/**
 * Mixin for absolute centering.
 * Centers an element absolutely within its container.
 */
/*----------  Clearfix  ----------*/
/**
 * Mixin for clearfix.
 * Ensures that a container clears its floated children.
 */
/*----------  Transition  ----------*/
/**
 * Mixin for applying smooth transitions.
 * Provides shorthand for transition properties.
 * @param {string} $property - CSS property to transition.
 * @param {string} $duration - Duration of the transition (e.g., 0.3s).
 * @param {string} $timing - Timing function (e.g., ease, linear).
 * @param {string} $delay - Delay before the transition starts.
 */
/*----------  Text Ellipsis  ----------*/
/**
 * Mixin for applying text ellipsis.
 * Ensures that overflowing text is truncated with an ellipsis.
 */
/*----------  Aspect Ratio  ----------*/
/**
 * Mixin for maintaining aspect ratio of an element.
 * Provides a way to create elements with a specific aspect ratio.
 * @param {number} $width - Width of the aspect ratio (e.g., 16).
 * @param {number} $height - Height of the aspect ratio (e.g., 9).
 */
/*----------  Box Shadow  ----------*/
/**
 * Mixin for applying box shadow.
 * Provides shorthand for box-shadow properties.
 * @param {string} $x-offset - Horizontal offset of the shadow.
 * @param {string} $y-offset - Vertical offset of the shadow.
 * @param {string} $blur-radius - Blur radius of the shadow.
 * @param {string} $spread-radius - Spread radius of the shadow.
 * @param {string} $color - Color of the shadow.
 */
/*=============================================
=            End of Essential Mixins          =
=============================================*/
.su-padding-none {
  padding: 0;
}

.su-padding-top-none {
  padding-top: 0;
}

.su-padding-right-none {
  padding-right: 0;
}

.su-padding-bottom-none {
  padding-bottom: 0;
}

.su-padding-left-none {
  padding-left: 0;
}

.su-padding-y-none {
  padding-top: 0;
  padding-bottom: 0;
}

.su-padding-x-none {
  padding-left: 0;
  padding-right: 0;
}

.su-padding-xxxs {
  padding: 0.25rem;
}

.su-padding-top-xxxs {
  padding-top: 0.25rem;
}

.su-padding-right-xxxs {
  padding-right: 0.25rem;
}

.su-padding-bottom-xxxs {
  padding-bottom: 0.25rem;
}

.su-padding-left-xxxs {
  padding-left: 0.25rem;
}

.su-padding-y-xxxs {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.su-padding-x-xxxs {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.su-padding-xxs {
  padding: 0.5rem;
}

.su-padding-top-xxs {
  padding-top: 0.5rem;
}

.su-padding-right-xxs {
  padding-right: 0.5rem;
}

.su-padding-bottom-xxs {
  padding-bottom: 0.5rem;
}

.su-padding-left-xxs {
  padding-left: 0.5rem;
}

.su-padding-y-xxs {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.su-padding-x-xxs {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.su-padding-xs {
  padding: 0.75rem;
}

.su-padding-top-xs {
  padding-top: 0.75rem;
}

.su-padding-right-xs {
  padding-right: 0.75rem;
}

.su-padding-bottom-xs {
  padding-bottom: 0.75rem;
}

.su-padding-left-xs {
  padding-left: 0.75rem;
}

.su-padding-y-xs {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.su-padding-x-xs {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.su-padding-sm {
  padding: 1rem;
}

.su-padding-top-sm {
  padding-top: 1rem;
}

.su-padding-right-sm {
  padding-right: 1rem;
}

.su-padding-bottom-sm {
  padding-bottom: 1rem;
}

.su-padding-left-sm {
  padding-left: 1rem;
}

.su-padding-y-sm {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.su-padding-x-sm {
  padding-left: 1rem;
  padding-right: 1rem;
}

.su-padding-md {
  padding: 1.5rem;
}

.su-padding-top-md {
  padding-top: 1.5rem;
}

.su-padding-right-md {
  padding-right: 1.5rem;
}

.su-padding-bottom-md {
  padding-bottom: 1.5rem;
}

.su-padding-left-md {
  padding-left: 1.5rem;
}

.su-padding-y-md {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.su-padding-x-md {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.su-padding-lg {
  padding: 2rem;
}

.su-padding-top-lg {
  padding-top: 2rem;
}

.su-padding-right-lg {
  padding-right: 2rem;
}

.su-padding-bottom-lg {
  padding-bottom: 2rem;
}

.su-padding-left-lg {
  padding-left: 2rem;
}

.su-padding-y-lg {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.su-padding-x-lg {
  padding-left: 2rem;
  padding-right: 2rem;
}

.su-padding-xl {
  padding: 3rem;
}

.su-padding-top-xl {
  padding-top: 3rem;
}

.su-padding-right-xl {
  padding-right: 3rem;
}

.su-padding-bottom-xl {
  padding-bottom: 3rem;
}

.su-padding-left-xl {
  padding-left: 3rem;
}

.su-padding-y-xl {
  padding-top: 3rem;
  padding-bottom: 3rem;
}

.su-padding-x-xl {
  padding-left: 3rem;
  padding-right: 3rem;
}

.su-padding-xxl {
  padding: 4.5rem;
}

.su-padding-top-xxl {
  padding-top: 4.5rem;
}

.su-padding-right-xxl {
  padding-right: 4.5rem;
}

.su-padding-bottom-xxl {
  padding-bottom: 4.5rem;
}

.su-padding-left-xxl {
  padding-left: 4.5rem;
}

.su-padding-y-xxl {
  padding-top: 4.5rem;
  padding-bottom: 4.5rem;
}

.su-padding-x-xxl {
  padding-left: 4.5rem;
  padding-right: 4.5rem;
}

.su-padding-xxxl {
  padding: 6rem;
}

.su-padding-top-xxxl {
  padding-top: 6rem;
}

.su-padding-right-xxxl {
  padding-right: 6rem;
}

.su-padding-bottom-xxxl {
  padding-bottom: 6rem;
}

.su-padding-left-xxxl {
  padding-left: 6rem;
}

.su-padding-y-xxxl {
  padding-top: 6rem;
  padding-bottom: 6rem;
}

.su-padding-x-xxxl {
  padding-left: 6rem;
  padding-right: 6rem;
}